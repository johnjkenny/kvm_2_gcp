---
- name: Deploy Docker Compose App1 (nginx + php + mysql)
  hosts: all
  become: true
  vars:
    app_dir: /opt/app1
  tasks:
    - name: Create app directory structure
      ansible.builtin.file:
        path: "{{ app_dir }}/{{ item }}"
        state: directory
        mode: '0750'
        owner: root
        group: root
      loop:
        - web
        - php
        - mysql/db

    - name: Copy Docker Compose file
      ansible.builtin.copy:
        src: docker/app1-compose.yml
        dest: "{{ app_dir }}/docker-compose.yml"
        mode: '0640'
        owner: root
        group: root

    - name: Copy web container files
      ansible.posix.synchronize:
        src: web/
        dest: "{{ app_dir }}/web/"
        recursive: true
        rsync_opts: ["--exclude=__init__.py"]

    - name: Copy php container files
      ansible.posix.synchronize:
        src: php/
        dest: "{{ app_dir }}/php/"
        recursive: true
        rsync_opts: ["--exclude=__init__.py"]

    - name: Copy db container files
      ansible.posix.synchronize:
        src: sql/
        dest: "{{ app_dir }}/mysql/"
        recursive: true
        rsync_opts: ["--exclude=__init__.py"]

    - name: Copy web index file
      ansible.builtin.copy:
        src: web/index.php
        dest: "{{ app_dir }}/php/index.php"
        mode: '0640'
        owner: root
        group: root

    - name: Write environment variables to file
      ansible.builtin.copy:
        dest: "{{ app_dir }}/.env"
        mode: "0600"
        owner: root
        group: root
        content: |
          DB_HOST=app1_db
          MYSQL_DATABASE=app1
          MYSQL_USER="user_{{ 99999 | random }}"
          MYSQL_PASSWORD="{{ lookup('password', '/dev/null', length=20, chars='ascii_letters') }}"
          MYSQL_ROOT_PASSWORD="{{ lookup('password', '/dev/null', length=20, chars='ascii_letters') }}"

    - name: Set ownership of copied files
      ansible.builtin.file:
        path: "{{ app_dir }}"
        owner: root
        group: root
        recurse: true
        state: directory

    - name: Deploy containers
      community.docker.docker_compose_v2:
        project_src: "{{ app_dir }}"
        build: always
        state: present
